group 'com.hilum'
version '1.0'

buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude module: "tomcat-jdbc"
}

dependencies {
    ////////////////----springboot相关库
    compile("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")


    ////////////////----spring test相关库
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("com.h2database:h2:1.4.196")
    testCompile("junit:junit:4.12")

    ////////////////----数据库相关库
    compile('mysql:mysql-connector-java:6.0.5')
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")
    compile("com.github.pagehelper:pagehelper-spring-boot-starter:1.1.1")
    compile("com.alibaba:druid-spring-boot-starter:1.1.5")

    ////////////////----通用工具库
    compile("commons-beanutils:commons-beanutils:1.9.3")
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    mybatisGenerate
}

def getDbProperties = {

    properties;
}

task mybatisGenerate {
    doLast{
        def mybatisConfigDir = projectDir.path + "/src/main/resources/mybatis/"
        def properties = new Properties()
        logger.warn("mybatisConfigDir:"+mybatisConfigDir)
        file( mybatisConfigDir + "DBConfig.properties").withInputStream { inputStream ->
            properties.load(inputStream)
        }

        ant.properties['targetProject'] = projectDir.path

        ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
        ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
        ant.properties['userId'] = properties.getProperty("jdbc.user")
        ant.properties['password'] = properties.getProperty("jdbc.pass")



        ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
        ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path

        ant.properties['modelPackage'] = properties.getProperty("package.model")
        ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
        ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")

        ant.taskdef(
                name: 'mbgenerator',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mybatisGenerate.asPath
        )
        logger.warn("cp:"+configurations.mybatisGenerate.asPath)
        logger.warn("dd:" + ant.properties['sqlMapperPackage'])
        ant.mbgenerator(overwrite: true,
                configfile: mybatisConfigDir + 'generatorConfig.xml', verbose: true) {
            propertyset {
                propertyref(name: 'targetProject')
                propertyref(name: 'userId')
                propertyref(name: 'driverClass')
                propertyref(name: 'connectionURL')
                propertyref(name: 'password')
                propertyref(name: 'src_main_java')
                propertyref(name: 'src_main_resources')
                propertyref(name: 'modelPackage')
                propertyref(name: 'mapperPackage')
                propertyref(name: 'sqlMapperPackage')
            }
        }
    }
}

dependencies {
    mybatisGenerate 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerate 'tk.mybatis:mapper:3.4.0'
    mybatisGenerate 'mysql:mysql-connector-java:5.1.44'
}



