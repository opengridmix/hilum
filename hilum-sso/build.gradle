group 'com.hilum'
version '1.0'

buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springBootVersion = '1.5.8.RELEASE'
}
repositories {
   mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude module: "tomcat-jdbc"
}

dependencies {
    ////////////////----springboot相关库
    compile("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
//    compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-feign:1.3.5.RELEASE")
    compile("org.springframework.security.oauth:spring-security-oauth2:2.2.0.RELEASE")
    compile("org.springframework.security:spring-security-jwt:1.0.8.RELEASE")


    ////////////////----数据库相关库
    compile('mysql:mysql-connector-java:6.0.5')
    compile("com.alibaba:druid-spring-boot-starter:1.1.5")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    compile("tk.mybatis:mapper:3.4.4")
    compile("tk.mybatis:mapper-spring-boot-starter:1.1.5")

    ////////////////----通用工具库
    compile("org.apache.commons:commons-collections4:4.1")
    compile("commons-beanutils:commons-beanutils:1.9.3")
    compile("com.netflix.feign:feign-jackson:8.17.0")
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


